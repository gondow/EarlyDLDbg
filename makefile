#
# Copyright (C) 2004-2013 Intel Corporation.
# SPDX-License-Identifier: MIT
#

# you need to edit PIN_ROOT's value
PIN_ROOT = /home/gondow/pin-3.28-98749-g6643ecee5-gcc-linux

build: libhook.so
	make DEBUG=1 obj-intel64/MyPinTool.so

export LD_BIND_NOW=1
export LD_LIBRARY_PATH=.

WRAP = -Wl,--wrap=malloc \
	-Wl,--wrap=free \
	-Wl,--wrap=calloc \
	-Wl,--wrap=posix_memalign \
	-Wl,--wrap=realloc \
	-Wl,--wrap=strdup \
	-Wl,--wrap=strndup \
	-Wl,--wrap=wcsdup \
	-Wl,--wrap=asprintf \
	-Wl,--wrap=strcpy \
	-Wl,--wrap=strncpy \
	-Wl,--wrap=memcpy \
	-Wl,--wrap=mempcpy \
	-Wl,--wrap=memmove \
	-Wl,--wrap=memset \
	-Wl,--wrap=_Znwm \
	-Wl,--wrap=_Znam \
	-Wl,--wrap=_ZdlPv \
	-Wl,--wrap=_ZdaPv \
	-Wl,--wrap=_ZdaPvm \
	-Wl,--wrap=_ZdlPvm \
	-Wl,--wrap=_ZnamRKSt9nothrow_t \
	-Wl,--wrap=_ZnwmRKSt9nothrow_t \
	-Wl,--wrap=_ZnwmSt11align_val_t \
	-Wl,--wrap=_ZnwmSt11align_val_tRKSt9nothrow_t \
	-Wl,--wrap=_ZnamSt11align_val_t \
	-Wl,--wrap=_ZnamSt11align_val_tRKSt9nothrow_t \
	-Wl,--wrap=_ZdlPvmSt11align_val_t \
	-Wl,--wrap=_ZdlPvRKSt9nothrow_t \
	-Wl,--wrap=_ZdlPvSt11align_val_t \
	-Wl,--wrap=_ZdlPvSt11align_val_tRKSt9nothrow_t \
	-Wl,--wrap=_ZdaPvmSt11align_val_t \
	-Wl,--wrap=_ZdaPvRKSt9nothrow_t \
	-Wl,--wrap=_ZdaPvSt11align_val_t \
	-Wl,--wrap=_ZdaPvSt11align_val_tRKSt9nothrow_t

dang: test/dang.c
	gcc -g -no-pie -U_FORTIFY_SOURCE -fno-omit-frame-pointer $(WRAP) ./test/dang.c -L. -lhook -o dang

leak: test/leak.c
	gcc -g -no-pie -U_FORTIFY_SOURCE -fno-omit-frame-pointer $(WRAP) ./test/leak.c -L. -lhook -o leak

# invalidate ASLR
setup:
	sudo sysctl -w kernel.randomize_va_space=0
	@env | egrep LD_BIND_NOW
	@env | egrep LD_LIBRARY_PATH

libhook.so: plp_malloc.c
	gcc -DNDEBUG -g -fPIC -shared -fno-omit-frame-pointer -fno-optimize-sibling-calls -o libhook.so $(WRAP) plp_malloc.c -ldl

test-dang:  libhook.so dang
	$(PIN_ROOT)/pin  -t obj-intel64/MyPinTool.so -- ./dang

test-leak:  libhook.so leak
	$(PIN_ROOT)/pin  -t obj-intel64/MyPinTool.so -- ./leak

clean2: clean
	-rm -f libhook.so leak dang *.o *~

#######################

TOOLS_ROOT = $(PIN_ROOT)/source/tools

##############################################################
#
#                   DO NOT EDIT THIS FILE!
#
##############################################################


# If the tool is built out of the kit, PIN_ROOT must be specified in the make invocation and point to the kit root.
ifdef PIN_ROOT
CONFIG_ROOT := $(PIN_ROOT)/source/tools/Config
else
CONFIG_ROOT := ../Config
endif
include $(CONFIG_ROOT)/makefile.config
include makefile.rules
include $(TOOLS_ROOT)/Config/makefile.default.rules

##############################################################
#
#                   DO NOT EDIT THIS FILE!
#
##############################################################
